name: pipeline

on:
  push:
  
jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Install dependencies for CasosDeUsos.Tests
      working-directory: CasosDeUsos.Tests
      run: dotnet restore

    - name: Run tests for CasosDeUsos.Tests
      working-directory: CasosDeUsos.Tests
      run: dotnet test --no-restore --verbosity normal

    - name: Install dependencies for Entidades.Tests
      working-directory: Entidades.Tests
      run: dotnet restore

    - name: Run tests for Entidades.Tests
      working-directory: Entidades.Tests
      run: dotnet test --no-restore --verbosity normal

    - name: Install dependencies for InterfaceAdapters.Tests
      working-directory: InterfaceAdapters.Tests
      run: dotnet restore

    - name: Run tests for InterfaceAdapters.Tests
      working-directory: InterfaceAdapters.Tests
      run: dotnet test --no-restore --verbosity normal

    - name: Install dependencies for Infra.Tests
      working-directory: Infra.Tests
      run: dotnet restore

    - name: Run tests for Infra.Tests
      working-directory: Infra.Tests
      run: dotnet test --no-restore --verbosity normal

  # code-analysis:
  #   runs-on: ubuntu-latest
  #   needs: unit-test
    
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v2
  #     with:
  #       dotnet-version: '8.0.x'

  #   - name: Install dependencies
  #     run: dotnet restore

  #   - name: Run Code Analysis
  #     run: dotnet build --configuration Release --no-restore

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Build with .NET
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish -c Release -o publish
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: publish
        path: publish/
         
  deploy-STG:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: stg
    
    if: github.ref == 'refs/heads/develop'
    steps:
    - name: Deploy 
      shell: bash
      run: |
        echo "Deploy STG"
          
  # smoketest:
  #   runs-on: ubuntu-latest
  #   needs: deploy-STG
    
  #   if: github.ref == 'refs/heads/develop'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Smoke Tests
  #     shell: bash
  #     run: sh 'src/main/scripts/smoketest.sh'
          
  # integrated-tests:
  #   runs-on: ubuntu-latest
  #   needs: smoketest
    
  #   if: github.ref == 'refs/heads/develop'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Integrated Tests
  #     shell: bash
  #     run: sh 'src/main/scripts/integratedTests.sh'
  
  deploy-pre:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: build
    steps:
    - name: Deploy 
      shell: bash
      run: |
        echo "Deploy PRE"
  
  # smoketest-pre:
  #   runs-on: ubuntu-latest
  #   needs: deploy-pre
    
  #   if: github.ref == 'refs/heads/release'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Smoke Tests
  #     shell: bash
  #     run: sh 'src/main/scripts/smoketest.sh'          
          
  # functional-tests:
  #   runs-on: ubuntu-latest
  #   needs: smoketest-pre
    
  #   if: github.ref == 'refs/heads/release'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Functional Tests
  #     shell: bash
  #     run: sh 'src/main/scripts/functionalTests.sh'  
          
  deploy-prod:
    runs-on: ubuntu-latest
    
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: build
    steps:
    - name: Deploy 
      shell: bash
      run: |
        echo "Deploy PROD" 
 
